create trivial program:

OUTPUT:

#include <stdio.h>
#include <math.h>

int main() {
  printf("%.17g", cos(0.5));
  return 0;
}

   this program creates the c program according to what the instructions said

gcc -o trivial trivial.c
ldd trivial

OUTPUT:

linux-vdso.so.1 =>  (0x00007ffeb60a4000)
libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f22fe6b3000)
/lib64/ld-linux-x86-64.so.2 (0x00005581f4253000)

strace -o output.txt ./trivial
emacs output.txt -nw

   Dynamic Linking Relationships:

   access...
   open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
   open("/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3

      these access and open the dynamically linked libraries that correspond with
      what we found in our ldd.

   fstat...

      attempt to find size of dynamically linked files to allocate memory?

   read...

      reads from the "Executable and Linkable Format" which contains
      necessary data in order to dynamically link?

   close...

      closes the dynamically linked files.
      
ls /usr/bin | awk 'NR%101==304785991%101'

OUTPUT:

abrt-action-analyze-core
at
cd-fix-profile
cpio
db_tuner
edid-decode
font2c
gjs
gsnd
hpcups-update-ppds
interdiff
kde4-doxygen.sh
ktelnetservice
lppasswd
mkisofs
nf-monitor
open
pamtilt
pbmtozinc
pinentry-curses
pnmquant
ppmglobe
pygtk-demo
rmail.sendmail
sed
splain
tcbmttest
umount
wvunpack
xtrace

create a program to ldd each of the above:

#!/bin/bash

for x in "$(ls /usr/bin | awk 'NR%101==304785991%101')"
do
    y=`which $x`
    ldd $y
done

./ldd_run.sh > so
sed 's/ =>.*//' < so | sed 's/(.*//' | sed 's/[[:space:]]//g' | sort -u > results

/lib64/ld-linux-x86-64.so.2
libatk-1.0.so.0
libatk-bridge-2.0.so.0
libatspi.so.0
libattica.so.0.4
libattr.so.1
libaudit.so.1
libblkid.so.1
libbz2.so.1
libcairo-gobject.so.2
libcairo.so.2
libcap-ng.so.0
libcap.so.2
libcolordprivate.so.2
libcolord.so.2
libcom_err.so.2
libcrypto.so.10
libcrypt.so.1
libc.so.6
libdb-5.3.so
libdbus-1.so.3
libdbusmenu-qt.so.2
libdl.so.2
libdrm.so.2
libdw.so.1
libEGL.so.1
libelf.so.1
libexpat.so.1
libfam.so.0
libffi.so.6
libfontconfig.so.1
libfreebl3.so
libfreetype.so.6
libgbm.so.1
libgcc_s.so.1
libgdk-3.so.0
libgdk_pixbuf-2.0.so.0
libgio-2.0.so.0
libgirepository-1.0.so.1
libgjs.so.0
libglapi.so.0
libglib-2.0.so.0
libGL.so.1
libgmodule-2.0.so.0
libgobject-2.0.so.0
libgraphite2.so.3
libgssapi_krb5.so.2
libgthread-2.0.so.0
libgtk-3.so.0
libharfbuzz.so.0
libhesiod.so.0
libICE.so.6
libidn.so.11
libk5crypto.so.3
libkdecore.so.5
libkdeui.so.5

   this program ldd on every single command, then gets rid of everything excess (spaces,
   =>, and everyting after). Afterwards, it sorts everything uniquely.

